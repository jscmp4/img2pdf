{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["polyfill","dragImageTranslateOverride","scrollBehaviourDragImageTranslateOverride","window","addEventListener","A4","Letter","Fit","Portrait","Landscape","None","Small","Big","App","React","Component","constructor","props","super","clearSelection","imgArr","this","state","images","forEach","img","selected","setState","readfiles","async","console","log","fileList","length","i","type","imgDataUrl","URL","createObjectURL","uuid","uuidv4","push","id","file","loadImage","objUrl","Promise","resolve","reject","Image","onload","onerror","e","src","fetchImage","dataURL","quality","canvas","document","createElement","ctx","getContext","width","height","drawImage","blob","canvasToBlob","arrayBuffer","mime","res","fetch","headers","get","createPdf","busy","pdfDoc","PDFDocument","create","pageSize","getPageSize","compressImages","imageQuality","undefined","raw","jpegOrientation","jpegExif","EXIF","readFromBinaryFile","ex","error","embedJpg","embedPng","page","addPage","x","y","scaleFactor","Math","min","getWidth","pageMargin","getHeight","dim","scale","setRotation","degrees","pdfBytes","save","Blob","link","href","download","click","err","lastError","lastMime","deletePage","arr","indexPosition","index","splice","handleDrop","droppedId","currentId","droppedIndex","droppedImage","currentIndex","pageOrientation","PageSizes","reverse","getAspectRatio","forceShowOption","fileInput","createRef","render","pageWrapper","border","display","background","position","pageStyle","margin","flex","backgroundSize","backgroundRepeat","backgroundPosition","ceil","boxShadow","landing","_jsxs","className","children","style","padding","_jsx","onClick","current","onDragStart","onDrop","stopPropagation","preventDefault","files","dataTransfer","onDragOver","onDragEnter","textAlign","paddingTop","target","backgroundColor","color","textDecoration","borderRadius","listView","flexWrap","justifyContent","map","draggable","effectAllowed","setData","getData","imgArr1","right","top","backgroundImage","pageMarginSection","paddingBottom","fontSize","flexDirection","imageQualitySelector","optionStyle","closeBtn","options","actions","borderTop","paddingLeft","paddingRight","pageHeader","ref","onChange","multiple","overflow","accept","readExif","toBlob","replace","c","r","random","toString","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec3bdb64.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport { PageSizes, PDFDocument, degrees } from 'pdf-lib'\r\nimport EXIF from 'exif-js';\r\nimport { polyfill } from \"mobile-drag-drop\";\r\n\r\n// optional import of scroll behaviour\r\nimport { scrollBehaviourDragImageTranslateOverride } from \"mobile-drag-drop/scroll-behaviour\";\r\n\r\n// options are optional ;)\r\npolyfill({\r\n  // use this to make use of the scroll behaviour\r\n  dragImageTranslateOverride: scrollBehaviourDragImageTranslateOverride\r\n});\r\n\r\nwindow.addEventListener('touchmove', function () { });\r\n\r\nconst A4 = \"A4\", Letter = \"US Letter\", Fit = \"Same as Image\", Portrait = \"Portrait\", Landscape = \"Landscape\", None = \"0\", Small = \"20\", Big = \"50\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      images: [],\r\n      pageOrientation: Portrait,\r\n      pageSize: A4,\r\n      pageMargin: None,\r\n      lastError: undefined,\r\n      lastMime: undefined,\r\n      forceShowOption: false,\r\n      compressImages: false,\r\n      imageQuality: 8,\r\n      busy: false\r\n    };\r\n    this.fileInput = React.createRef();\r\n  }\r\n  render() {\r\n    let pageWrapper = {\r\n      height: \"192px\",\r\n      width: \"192px\",\r\n      border: \"none\",\r\n      display: \"flex\",\r\n      background: \"white\",\r\n      position: \"relative\"\r\n    };\r\n\r\n    let pageStyle = {\r\n      margin: '0px',\r\n      flex: \"1\",\r\n      backgroundSize: \"contain\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\"\r\n    };\r\n\r\n    if (this.state.pageMargin === Small) {\r\n      pageStyle.margin = \"5px\";\r\n    } else if (this.state.pageMargin === Big) {\r\n      pageStyle.margin = \"10px\";\r\n    }\r\n\r\n    if (this.state.pageSize !== Fit) {\r\n      pageWrapper.width = Math.ceil(192 * this.getAspectRatio()) + 'px';\r\n      pageWrapper.boxShadow = \"5px 5px 5px rgb(200,200,200)\";\r\n    }\r\n\r\n    const landing = (\r\n      <div className=\"landing-page\">\r\n        <div style={{ padding: \"40px\" }}>\r\n          Convert JPEG or PNG images to PDF without uploading your sensitive data anywhere.\r\n          <br />\r\n          Files are processed entirely on your device and do not get uploaded to any server.\r\n        </div>\r\n        <button onClick={() => this.fileInput.current.click()} className=\"big-btn\">Select Images</button>\r\n        <div className=\"dropzone\"\r\n          onDragStart={(e) => {\r\n          }}\r\n          onDrop={(e) => {\r\n            if (e.stopPropagation) {\r\n              e.stopPropagation(); // stops the browser from redirecting.\r\n            }\r\n            if (e.preventDefault) {\r\n              e.preventDefault(); // stops the browser from redirecting.\r\n            }\r\n            let files = e.dataTransfer.files;\r\n            this.readfiles(files);\r\n          }}\r\n          onDragOver={(e) => {\r\n            if (e.preventDefault) {\r\n              e.preventDefault(); // stops the browser from redirecting.\r\n            }\r\n          }}\r\n          onDragEnter={(e) => { e.preventDefault(); }}>or drop images here</div>\r\n    \r\n        {/* 在这里添加捐款按钮 */}\r\n        <footer style={{ textAlign: 'center', paddingTop: '20px' }}>\r\n          <p>This tool is completely free to use, but maintaining it is not easy.</p>\r\n          <p>If you find this tool useful, please consider supporting us by making a donation.</p>\r\n          <a href=\"https://www.shaoyuyuan.com/yuan\" target=\"_blank\" \r\n             style={{ backgroundColor: '#4CAF50', color: 'white', padding: '10px 20px', textDecoration: 'none', borderRadius: '5px' }}>\r\n            Donate\r\n          </a>\r\n        </footer>\r\n      </div>\r\n    );\r\n\r\n    const listView = (<div style={{ display: 'flex', flexWrap: 'wrap', flex: \"1\", justifyContent: \"center\" }} >\r\n      {this.state.images.map((img, index) => (\r\n        <div\r\n          style={{ padding: \"5px\" }}\r\n          key={img.id + \"\"}\r\n          draggable={true}\r\n          onDragStart={(e) => {\r\n            e.dataTransfer.effectAllowed = 'move';\r\n            e.dataTransfer.setData('text/plain', img.id);\r\n            console.log(\"Drag start \" + index);\r\n          }}\r\n          onDrop={(e) => {\r\n            if (e.stopPropagation) {\r\n              e.stopPropagation(); // stops the browser from redirecting.\r\n            }\r\n            let droppedId = e.dataTransfer.getData(\"text/plain\");\r\n            console.log(\"droppedId: \" + droppedId);\r\n            this.handleDrop(droppedId, img.id);\r\n          }}\r\n          onDragOver={(e) => {\r\n            if (e.preventDefault) {\r\n              e.preventDefault(); // stops the browser from redirecting.\r\n            }\r\n          }}\r\n          onDragEnter={(e) => { e.preventDefault(); }}\r\n        >\r\n          <div style={{ ...pageWrapper }}\r\n            onClick={\r\n              (e) => {\r\n                let imgArr1 = [...this.state.images];\r\n                for (let x = 0; x < imgArr1.length; x++) {\r\n                  imgArr1[x] = { ...imgArr1[x], selected: imgArr1[x].id === img.id };\r\n                }\r\n                this.setState({ images: [...imgArr1] });\r\n                e.stopPropagation();\r\n              }\r\n            }\r\n          >\r\n            <div style={{\r\n              display: img.selected ? \"block\" : \"none\", position: \"absolute\",\r\n              right: \"0px\", top: \"0px\", padding: \"5px\", color: \"rgb(180,180,180)\"\r\n            }} onClick={(e) => { e.stopPropagation(); this.deletePage(img.id); }} ><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></div>\r\n            <div style={{ ...pageStyle, backgroundImage: \"url('\" + img.imgDataUrl + \"')\" }}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>);\r\n\r\n    const pageMarginSection = (<div>\r\n      <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page margin</div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == None ? \"purple\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == None ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: None })}>None</div>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == Small ? \"purple\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == Small ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: Small })}>Small</div>\r\n        <div style={{\r\n          flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n          justifyContent: \"center\", textAlign: \"center\",\r\n          background: (this.state.pageMargin == Big ? \"purple\" : \"rgb(240,240,240)\"),\r\n          color: (this.state.pageMargin == Big ? \"white\" : \"black\"), padding: \"5px\"\r\n        }} onClick={() => this.setState({ pageMargin: Big })}>Big</div>\r\n      </div>\r\n    </div>);\r\n\r\n    const imageQualitySelector = (<div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>Image quality</div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ padding: \"5px\" }}>\r\n          <button onClick={() => {\r\n            if (this.state.imageQuality < 10) {\r\n              this.setState({\r\n                imageQuality: +this.state.imageQuality + 1\r\n              });\r\n            }\r\n          }}>+</button>\r\n        </div>\r\n        <div style={{ padding: \"5px\" }}>\r\n          <div>{this.state.imageQuality / 10}</div>\r\n        </div>\r\n        <div style={{ padding: \"5px\" }} >\r\n          <button onClick={() => {\r\n            if (this.state.imageQuality > 1) {\r\n              this.setState({\r\n                imageQuality: +this.state.imageQuality - 1\r\n              });\r\n            }\r\n          }}>-</button>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n\r\n    const optionStyle = {}\r\n    if (this.state.forceShowOption) {\r\n      optionStyle.display = \"block\"\r\n    }\r\n\r\n    const closeBtn = this.state.forceShowOption ? <span onClick={() => { this.setState({ forceShowOption: false }) }}>X</span> : <span></span>;\r\n\r\n    const options = (\r\n      <div className=\"options\" style={optionStyle}>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"20px\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <span>Options</span>\r\n          {closeBtn}\r\n        </div>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"10px\" }}>Page orientation</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageOrientation == Portrait ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageOrientation == Portrait ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ pageOrientation: Portrait })}>Portrait</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageOrientation == Landscape ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageOrientation == Landscape ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ pageOrientation: Landscape })}>Landscape</div>\r\n        </div>\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Page size</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == A4 ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == A4 ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: A4 })}>A4</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == Letter ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == Letter ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: Letter })}>US Letter</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.pageSize == Fit ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.pageSize == Fit ? \"white\" : \"black\"), padding: \"5px\"\r\n          }} onClick={() => this.setState({ pageSize: Fit })}>Same as Image</div>\r\n        </div>\r\n        {this.state.pageSize !== Fit ? pageMarginSection : (<div></div>)}\r\n        <div style={{ paddingBottom: \"10px\", fontSize: \"16px\", color: \"gray\", paddingTop: \"20px\" }}>Compression</div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (this.state.compressImages ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (this.state.compressImages ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ compressImages: true })}>Compress Images</div>\r\n          <div style={{\r\n            flex: \"1\", height: \"50px\", display: \"flex\", flexDirection: \"column\",\r\n            justifyContent: \"center\", textAlign: \"center\",\r\n            background: (!this.state.compressImages ? \"purple\" : \"rgb(240,240,240)\"),\r\n            color: (!this.state.compressImages ? \"white\" : \"black\"), padding: \"5px\"\r\n          }}\r\n            onClick={() => this.setState({ compressImages: false })}>Don't Compress</div>\r\n        </div>\r\n        {this.state.compressImages ? imageQualitySelector : (<div></div>)}\r\n      </div>\r\n    );\r\n    const actions = (<div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"10px\", borderTop: \"1px solid rgb(200,200,200)\" }}>\r\n      <div style={{ display: \"flex\" }} >\r\n        <div style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\r\n          <button onClick={() => {\r\n            this.setState({\r\n              forceShowOption: true\r\n            });\r\n          }} className=\"option-btn button\">PDF Options</button>\r\n        </div>\r\n        <button onClick={() => this.fileInput.current.click()} className=\"button\">Add page</button>\r\n      </div>\r\n      <button onClick={this.createPdf} className=\"button\">Generate PDF</button>\r\n    </div>);\r\n\r\n    const pageHeader = (<div className=\"page-header\">\r\n      <span>CONVERT IMAGE TO PDF</span>\r\n    </div>);\r\n\r\n    if (this.state.images.length < 1) {\r\n      return <div>\r\n        {pageHeader}\r\n        <input type=\"file\" ref={this.fileInput} onChange={() => this.readfiles(this.fileInput.current.files)} multiple style={{ display: \"none\" }}></input>\r\n        {landing}\r\n      </div>\r\n    }\r\n\r\n    const busy = {};\r\n    if (this.state.busy) {\r\n      busy.display = \"flex\";\r\n    }\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", height: \"100%\", overflow: \"hidden\", flex: \"1\" }}>\r\n        {pageHeader}\r\n        <div style={{ display: \"flex\", overflow: \"hidden\", flex: \"1\" }}>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", flex: \"1\", overflow: \"auto\", background: \"rgb(240,240,240)\" }} onClick={this.clearSelection}>\r\n            {listView}\r\n            <div style={{ flex: \"1\" }}></div>\r\n          </div>\r\n          {options}\r\n        </div>\r\n        {actions}\r\n        <input type=\"file\" accept={\"image/*\"} ref={this.fileInput} onChange={() => this.readfiles(this.fileInput.current.files)} multiple style={{ display: \"none\" }} />\r\n        <div className=\"busy\" style={busy}>Generating PDF, Please wait...</div>\r\n      </div>\r\n\r\n    );\r\n\r\n    // return (\r\n    //   <div>\r\n    //     <div>This app is not styled yet</div>\r\n    //     <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n    //       {this.state.images.map((img, index) => (\r\n    //         <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n    //           <img src={img.imgDataUrl} alt=\"\" style={{ width: \"96px\", height: \"128px\" }}></img>\r\n    //           <div>{\"Page \" + (index + 1)}</div>\r\n    //         </div>\r\n    //       ))}\r\n    //     </div>\r\n    //     <div>\r\n    //       <input type=\"file\" ref={this.fileInput} onChange={this.readfiles} multiple></input>\r\n    //       <button onClick={() => { this.setState({ images: [] }) }}>Clear</button>\r\n    //       <button onClick={this.createPdf}>Generate PDF</button>\r\n    //     </div>\r\n    //     {this.state.lastError ?\r\n    //       <div>\r\n    //         <div>{this.state.lastError}</div>\r\n    //         <div>{this.state.lastMime}</div>\r\n    //       </div> : <div>{this.state.lastMime}</div>}\r\n    //     <div>{this.state.lastMime}</div>\r\n    //   </div>);\r\n  }\r\n\r\n  //https://labs.madisoft.it/javascript-image-compression-and-resizing/\r\n  /* resizeImage = async (file, width, height) => {\r\n    const blobURL = window.URL.createObjectURL(file);\r\n    const img = new Image();\r\n    img.src = blobURL;\r\n    img.onload = function (ev) {\r\n      window.URL.revokeObjectURL(blobURL); // release memory\r\n      // Use the img\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n    };\r\n\r\n  } */\r\n\r\n  clearSelection = () => {\r\n    let imgArr = [...this.state.images];\r\n    imgArr.forEach(img => {\r\n      img.selected = false;\r\n    });\r\n    this.setState({\r\n      images: imgArr\r\n    });\r\n  }\r\n\r\n  readfiles = async (fileList) => {\r\n    console.log(fileList.length);\r\n    let imgArr = [];\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      console.log(\"Type: \" + fileList[i].type);\r\n      if (!(fileList[i].type === \"image/png\" || fileList[i].type === \"image/x-png\" || fileList[i].type === \"image/jpeg\")) {\r\n        continue;\r\n      }\r\n      const imgDataUrl = window.URL.createObjectURL(fileList[i]);\r\n      //let img = await this.loadImage(imgDataUrl);\r\n      let uuid = this.uuidv4();\r\n      console.log(\"uuid: \" + uuid);\r\n      imgArr.push({ id: uuid, imgDataUrl, file: fileList[i], /* width: img.width, height: img.height */selected: false });\r\n    }\r\n    this.setState((state) => ({\r\n      images: [...state.images, ...imgArr]\r\n    }));\r\n  }\r\n\r\n  loadImage = (objUrl) => {\r\n    return new Promise((resolve, reject) => {\r\n      let img = new Image();\r\n      img.onload = () => {\r\n        resolve(img);\r\n      };\r\n      img.onerror = (e) => {\r\n        reject(e);\r\n      };\r\n      img.src = objUrl;\r\n    });\r\n  }\r\n\r\n  readExif(blob) {\r\n    EXIF.readFromBinaryFile(blob)\r\n  }\r\n\r\n  canvasToBlob(canvas, quality) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        canvas.toBlob(resolve, \"image/jpeg\", quality);\r\n      }\r\n      catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  // scaleImage = async (pageWidth, pageHeight, pageMargin, dataURL) => {\r\n  //   let img = await this.loadImage(dataURL);\r\n\r\n  //   let scaleFactor = Math.min((pageWidth - pageMargin) / img.width, (pageHeight - pageMargin) / img.height);\r\n  //   let w = img.width * scaleFactor;\r\n  //   let h = img.height * scaleFactor;\r\n\r\n  //   let canvas = document.createElement('canvas');\r\n  //   let ctx = canvas.getContext('2d');\r\n  //   canvas.width = w;\r\n  //   canvas.height = h;\r\n  //   ctx.drawImage(img, 0, 0, w, h);\r\n  //   let blob = await this.canvasToBlob(canvas);\r\n  //   console.log(blob);\r\n  //   return await blob.arrayBuffer();\r\n  // }\r\n\r\n  fetchImage = async (dataURL, quality) => {\r\n    if (!quality) {\r\n      let res = await fetch(dataURL);\r\n      let raw = await res.arrayBuffer();\r\n      return {\r\n        arrayBuffer: raw,\r\n        mime: res.headers.get('content-type')\r\n      }\r\n    }\r\n    else {\r\n      let img = await this.loadImage(dataURL);\r\n      let canvas = document.createElement('canvas');\r\n      let ctx = canvas.getContext('2d');\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0, img.width, img.height);\r\n      let blob = await this.canvasToBlob(canvas, quality);\r\n      let raw = await blob.arrayBuffer();\r\n      return {\r\n        arrayBuffer: raw,\r\n        mime: \"image/jpeg\"\r\n      };\r\n    }\r\n  }\r\n\r\n  createPdf = async () => {\r\n    let mime = \"\";\r\n    try {\r\n      this.setState({ busy: true });\r\n      const pdfDoc = await PDFDocument.create();\r\n      for (let i = 0; i < this.state.images.length; i++) {\r\n\r\n        let pageSize = this.getPageSize();\r\n\r\n        // if (this.state.pageSize !== Fit) {\r\n        //   const page = pdfDoc.addPage(pageSize);\r\n        //   const dim = await pdfDoc.embedPng(await this.scaleImage(page.getWidth(), page.getHeight(), this.state.pageMargin, this.state.images[i].imgDataUrl));\r\n        //   page.drawImage(dim, {\r\n        //     x: page.getWidth() / 2 - dim.width / 2,\r\n        //     y: page.getHeight() / 2 - dim.height / 2,\r\n        //     width: dim.width,\r\n        //     height: dim.height,\r\n        //   });\r\n\r\n        //   continue;\r\n        // }\r\n\r\n        // let loadedImage=await loadImage(this.state.images[i].imgDataUrl,{meta:true});\r\n        // console.log(\"loaded image \"+loadedImage);\r\n        // console.log(loadedImage);\r\n\r\n        let res = await this.fetchImage(this.state.images[i].imgDataUrl, this.state.compressImages ? this.state.imageQuality / 10 : undefined);\r\n        let raw = await res.arrayBuffer;\r\n\r\n        mime = res.mime;\r\n        console.log(mime);\r\n\r\n        let jpegOrientation = 1;\r\n\r\n        if (mime === 'image/jpeg') {\r\n          try {\r\n            let jpegExif = EXIF.readFromBinaryFile(raw);\r\n            if (jpegExif[\"Orientation\"]) {\r\n              jpegOrientation = jpegExif[\"Orientation\"];\r\n              console.log(\"jpegOrientation: \" + jpegOrientation);\r\n            }\r\n          }\r\n          catch (ex) { console.error(ex); }\r\n        }\r\n        //console.log(raw);\r\n        const img = await (mime === 'image/jpeg' ? pdfDoc.embedJpg(raw) : pdfDoc.embedPng(raw));\r\n\r\n        console.log(\"width: \" + img.width + \" height: \" + img.height);\r\n\r\n        if (this.state.pageSize === Fit) {\r\n          pageSize = [img.width, img.height];\r\n        } else {\r\n          switch (jpegOrientation) {\r\n            case 6:\r\n            case 8:\r\n              pageSize = [pageSize[1], pageSize[0]];\r\n              break;\r\n          }\r\n        }\r\n        const page = pdfDoc.addPage(pageSize);\r\n        if (this.state.pageSize === Fit) {\r\n          page.drawImage(img, {\r\n            x: 0,\r\n            y: 0,\r\n            width: img.width,\r\n            height: img.height,\r\n          });\r\n        } else {\r\n          //page.setSize(pageSize[0], pageSize[1]);\r\n          let scaleFactor = Math.min((page.getWidth() - this.state.pageMargin) / img.width, (page.getHeight() - this.state.pageMargin) / img.height);\r\n          let w = img.width * scaleFactor;\r\n          let h = img.height * scaleFactor;\r\n\r\n          //page.setSize(img.width,img.height);\r\n          console.log(img.width + \" \" + img.height);\r\n          console.log(page.getWidth() + \" \" + page.getHeight());\r\n\r\n          let dim = img.scale(scaleFactor);\r\n\r\n          page.drawImage(img, {\r\n            x: page.getWidth() / 2 - dim.width / 2,\r\n            y: page.getHeight() / 2 - dim.height / 2,\r\n            width: dim.width,\r\n            height: dim.height,\r\n          });\r\n        }\r\n\r\n        switch (jpegOrientation) {\r\n          case 6:\r\n            page.setRotation(degrees(90));\r\n            break;\r\n          case 3:\r\n            page.setRotation(degrees(180));\r\n            break;\r\n          case 8:\r\n            page.setRotation(degrees(270));\r\n            break;\r\n        }\r\n      }\r\n      const pdfBytes = await pdfDoc.save();\r\n      let blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n      // let url = window.URL.createObjectURL(blob);\r\n      // window.open(url);\r\n      var link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      var fileName = \"file.pdf\";\r\n      link.download = fileName;\r\n      link.click();\r\n      this.setState({ busy: false });\r\n    }\r\n    catch (err) {\r\n      console.error(err);\r\n      this.setState({ lastError: err, lastMime: mime, busy: false });\r\n    }\r\n  }\r\n\r\n  deletePage = id => {\r\n    console.log(\"To delete: \" + id);\r\n    let arr = [...this.state.images];\r\n    let indexPosition = -1;\r\n    arr.forEach((img, index) => {\r\n      if (img.id === id) {\r\n        indexPosition = index;\r\n      }\r\n    });\r\n    arr.splice(indexPosition, 1);\r\n    this.setState({\r\n      images: arr\r\n    });\r\n  }\r\n\r\n  handleDrop = (droppedId, currentId) => {\r\n    console.log(\"droppedId: \" + droppedId + \" currentId: \" + currentId);\r\n    let droppedIndex = -1;\r\n    let arr = [...this.state.images];\r\n    arr.forEach((img, index) => {\r\n      if (img.id === droppedId) {\r\n        droppedIndex = index;\r\n      }\r\n    });\r\n    let droppedImage = arr.splice(droppedIndex, 1)[0];\r\n    let currentIndex = -1;\r\n    arr.forEach((img, index) => {\r\n      if (img.id === currentId) {\r\n        currentIndex = index;\r\n      }\r\n    });\r\n    arr.splice(currentIndex, 0, droppedImage);\r\n    console.log(arr);\r\n\r\n    this.setState({\r\n      images: arr\r\n    });\r\n  }\r\n\r\n  getPageSize = () => {\r\n    switch (this.state.pageSize) {\r\n      case A4:\r\n        if (this.state.pageOrientation === Portrait) {\r\n          return PageSizes.A4;\r\n        }\r\n        else {\r\n          let pageSize = [...PageSizes.A4];\r\n          pageSize.reverse();\r\n          return pageSize;\r\n        }\r\n      case Letter:\r\n        if (this.state.pageOrientation === Portrait) {\r\n          return PageSizes.Letter;\r\n        }\r\n        else {\r\n          let pageSize = [...PageSizes.Letter];\r\n          pageSize.reverse();\r\n          return pageSize;\r\n        }\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  getAspectRatio = () => {\r\n    let pageSize = this.getPageSize();\r\n    return pageSize[0] / pageSize[1];\r\n  }\r\n\r\n  // getPreviewImageSize = (pageWidth, pageHeight, imageWidth, imageHeight) => {\r\n  //   let pageSize = this.getPageSize();\r\n  //   let margin = this.state.pageMargin * pageHeight / pageSize[1];\r\n  //   let scaleFactor = Math.min((pageWidth - margin) / img.width, (pageHeight - margin) / img.height);\r\n  //   let w = imageWidth * scaleFactor;\r\n  //   let h = imageHeight * scaleFactor;\r\n  //   return [w, h];\r\n  // }\r\n\r\n  // getPreviewPageSize = () => {\r\n  //   return {\r\n  //     height: 192,\r\n  //     width: 192 * this.getAspectRatio()\r\n  //   };\r\n  // }\r\n\r\n  // getMaxImageSize=()=>{\r\n  //   let maxWidth = -1;\r\n  //   let maxHeight = -1;\r\n  //   this.state.images.forEach(image => {\r\n  //     if (image.width > maxWidth) maxWidth = image.width;\r\n  //     if (image.height > maxWidth) maxHeight = image.height;\r\n  //   });\r\n  //   return {\r\n  //     width: maxWidth,\r\n  //     height: maxHeight\r\n  //   };\r\n  // }\r\n\r\n  /* createPdf = async () => {\r\n    const pdfDoc = await PDFDocument.create();\r\n    this.createPage(pdfDoc, 1);\r\n  }\r\n\r\n  createPage = (pdfDoc, index) => {\r\n    this.embedImage(pdfDoc, index).then(() => {\r\n      if (index > this.state.images.length) {\r\n        pdfDoc.save().then((blob) => {\r\n          var link = document.createElement('a');\r\n          link.href = window.URL.createObjectURL(blob);\r\n          var fileName = \"file.pdf\";\r\n          link.download = fileName;\r\n          link.click();\r\n        });\r\n      }\r\n      this.createPage(pdfDoc, index + 1);\r\n    });\r\n  }\r\n\r\n  embedImage = async (pdfDoc, index) => {\r\n    if (index > this.state.images.length) return;\r\n    let raw = await (await fetch(this.state.images[index - 1])).blob();\r\n    const img = await pdfDoc.embedJpg(raw);\r\n    const page = pdfDoc.addPage();\r\n    page.drawImage(img, {\r\n      x: 0,\r\n      y: 0,\r\n      width: page.getWidth(),\r\n      height: page.getHeight(),\r\n    });\r\n  } */\r\n\r\n  uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}